[Producer.TLU]
# scint: 4 3 2 1 <--- beam
# 
# scint bits     2+4 =  6
# scint bits     4+8 = 12
# scint bits   1+4+8 = 13
# scint bits   2+4+8 = 14
# scint bits 1+2+4+8 = 15
AndMask = 6 #was 6
OrMask =  0 #was 0
VetoMask = 0
DutMask = 13 # was 3
DebugLevel = 10
TriggerInterval = 0
TrigRollover = 0
HandShakeMode = 0
EnableDUTVeto = 0
DUTInput0 = LEMO
DUTInput1 = LEMO
DUTInput2 = LEMO # wasnt there
DUTInput3 = LEMO # wasnt there

[Producer.analog]
roctype = psi46v2

# PCB type
# Use "desytb" for the regular PCBs (ROC cols in x, rows in y)
pcbtype = psipcb
# USe "desytb-rot" for the rotated PCB (ROC rows in x, cols in y)
#pcbtype = desy-rot
i2c = 1 2 3 4

trimFile = "/home/testbeam/data/analogue_pxar/4_3_2_1_telescope/trimParameters"
dacFile = "/home/testbeam/data/analogue_pxar/4_3_2_1_telescope/dacParameters"

# DAC settings to overwrite DAC file values:
wbc        = 95 #106 # with latency 80

# Sending periodic ROC resets
# Parameter to be given in milliseconds, setting 0 turns it off
#rocresetperiod = 50

# DTB related settings:
# external clock on/off
external_clock = 0
# Select trigger source ("async" for external trigger):
trigger_source = async
# DTB board USB ID
usbId = "DTB_WWXN06"
hubid = 0

# Scope outputs:
signalprobe_d1 = ctr
signalprobe_d2 = tout

# Supply voltages and current limits:
vd = 2.500
va = 1.70
id = 1.00
ia = 1.200

# DTB Timing
clk = 10
ctr = 10
sda = 21
tin = 12
deser160phase = 4
#level = 15
level = 15
#triggerlatency = 86 # historic default (from ATB)
triggerlatency = 80
tindelay = 14
toutdelay = 9
triggerdelay = 0

# Other settings (producer & pxarCore)
# pxarCore library verbosity
verbosity =  WARNING
#verbosity = WARNING
# outputFile pattern
outputFilePath = "../data/DUT/"
# Waiting time (ms) before stopping DAQ (TLU is slow in stopping triggering...)
tlu_waiting_time = 4000

# Pattern generator
# turn on/off additional test pulses
testpulses = 0
# delays (BC) after this signal:
resetroc     = 25
calibrate    = 106
trigger      = 46
token        = 0
# delay between pattern loop:
patternDelay = 50000





[Producer.digital]
roctype = psi46digv21respin

# PCB type
# Use "desytb" for the regular PCBs (ROC cols in x, rows in y)
pcbtype = psipcb
# USe "desytb-rot" for the rotated PCB (ROC rows in x, cols in y)
#pcbtype = desy-rot
nRocs = 1
i2c = 0

trimFile = "/home/testbeam/data/digital-ROCs/desy/trimParameters"
dacFile = "/home/testbeam/data/digital-ROCs/desy/dacParameters"

# DAC settings to overwrite DAC file values:
wbc        = 94 #106 # with latency 80

# Sending periodic ROC resets
# Parameter to be given in milliseconds, setting 0 turns it off
#rocresetperiod = 50

# DTB related settings:
# external clock on/off
external_clock = 0
# Select trigger source ("async" for external trigger):
trigger_source = async
# DTB board USB ID
usbId = "DTB_WRBSJ9"
hubid = 0

# Scope outputs:
signalprobe_d1 = ctr
signalprobe_d2 = tout

# Supply voltages and current limits:
vd = 2.500
va = 1.70
id = 1.00
ia = 1.200

# DTB Timing
clk = 1
ctr = 1
sda = 16
tin = 6
deser160phase = 4
#level = 15
level = 15
#triggerlatency = 86 # historic default (from ATB)
triggerlatency = 80


# Other settings (producer & pxarCore)
# pxarCore library verbosity
verbosity =  WARNING
#verbosity = WARNING
# outputFile pattern
outputFilePath = "../data/DUT/"
# Waiting time (ms) before stopping DAQ (TLU is slow in stopping triggering...)
tlu_waiting_time = 4000

# Pattern generator
# turn on/off additional test pulses
testpulses = 0
# delays (BC) after this signal:
resetroc     = 25
calibrate    = 106
trigger      = 46
token        = 0
# delay between pattern loop:
patternDelay = 50000






[Producer.V1730]

#ch0 = 1; ch2 = 2; software = 2147483648; NIM input = 1073741824
trigger_source = 1073741824

#think bitwise; 0b00000011 -> ch0&ch1 active, 0b10000101 -> ch7&ch2&ch0 active
active_channels = 1

#threshold (14 bit = full range)
trigger_threshold = 1000

#size of the event (nr of samples = number below + 10)
event_length = 990

#post trigger samples
post_trigger_samples = 300

#0x8000
dc_offset = 50000

#0 = 2V, 1 = 0.5V
signal_range = 1
